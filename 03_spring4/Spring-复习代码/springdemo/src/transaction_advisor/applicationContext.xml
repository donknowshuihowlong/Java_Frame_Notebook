<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-4.2.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-4.2.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-4.2.xsd 
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx.xsd">
	<!-- 1. 配置读取jdbc.properties文件 -->
	<context:property-placeholder location="classpath:transaction_advisor/jdbc.properties"/>
	<!-- 2. 配置C3P0连接池 -->
	<bean name="myC3P0DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" >
		<property name="jdbcUrl" value="${jdbc.jdbcUrl}" ></property>
		<property name="driverClass" value="${jdbc.driverClass}" ></property>
		<property name="user" value="${jdbc.user}" ></property>
		<property name="password" value="${jdbc.password}" ></property>
	</bean>
	<!-- 3. 注入DAO，会自动注入jdbctemplate对象 -->
	<bean id="myaDao" class="transaction_advisor.AccountDaoImpl">
		<property name="dataSource" ref="myC3P0DataSource"></property>
	</bean>
	<bean id="mysDao" class="transaction_advisor.StockDaoImpl">
		<property name="dataSource" ref="myC3P0DataSource"></property>
	</bean>
	<!-- 5. 配置事务管理器 -->
	<!-- 用的JDBC进行持久化，所以使用DataSourceTransactionManager作为事务管理器 -->
	<bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="myC3P0DataSource"></property>
	</bean>
	<!-- 6. 配置事务通知 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager" >
		<tx:attributes>
			<!-- 以方法为单位,指定方法应用什么事务属性
				isolation:隔离级别
				propagation:传播行为
				read-only:是否只读
			 -->
			<tx:method name="save*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="persist*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="update*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="modify*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="delete*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="remove*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" />
			<tx:method name="get*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />
			<tx:method name="find*" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="true" />
			<tx:method name="buyStock" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" rollback-for="StockException"/>
		</tx:attributes>
	</tx:advice>
	<!-- 7. 配置织入 -->
	<aop:config  >
		<!-- 配置切点表达式 -->
		<aop:pointcut expression="execution(* transaction_advisor.*ServiceImpl.*(..))" id="txPc"/>
		<!-- 配置切面 : 通知+切点
			 	advice-ref:通知的名称
			 	pointcut-ref:切点的名称
		 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPc" />
	</aop:config>
	<!-- 4. 配置Service -->
	<bean id="myService" class="transaction_advisor.StockProcessServiceImpl">
		<property name="adao" ref="myaDao"></property>
		<property name="sdao" ref="mysDao"></property>
	</bean>
	
</beans>